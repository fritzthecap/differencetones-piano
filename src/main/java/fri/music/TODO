
- Implement DifferenceTonesOnPianoPlayer that extends NotesPiano
    and translates the melody from text-area to difference-tone intervals
    before playing. Use the convertNotesToChords() override for this.

- Must be able to change tuning of NotesPiano (TuningComponent).

- Must be able to load and save melodies from/to files in NotesPiano.

- Provide an "Export to ABC" button that writes notes in ABC format
    and renders the result in a non-modal text-dialog.
    
- Give DifferenceTonePiano and others an initial interval or chord to play.

- Display 
    of Tunings with frequency and cent
    of difference tones in different tunings
    of difference tone inversions in different tunings
    
- Documentation UI, leading through different topics.
    This should be in foreground initially, but can be made optional
    for all introduction-dialogs through a checkbox "Never show introductions".
    When this checkbox gets clicked, not a single introduction 
    dialog will show anywhere anymore. Main menu offers an action to
    reverse that setting.

    Running the application opens main documentation. Then different
    buttons provide insights:
    "See and Hear Difference Tones" (FrequencyDifferenceSliders, DifferenceTonePiano), 
    "Explore Beatings in Intervals of Different Tunings" (IntervalPlayingPiano),
    "Test Chords in Different Tunings" (TriadPlayingPiano, FrequencyChordSliders),
    "See Difference Tones on Piano" (DifferenceTonePiano), 
    "Explore Tone Systems", or "See Frequencies, Cent, IPN names and MIDI numbers" (EqualTemperamentDemo, JustIntonationDemo, ...), 
    "Check Just Intonation" (JustIntonationChecker), 
    "Translate a Melody into Difference Tones" (DifferenceToneInversions, DefaultComposer), 
    "Look at Pianos" (PianoConfiguration), 
    "Try out Wave Generators" (WavePianoDemo, PianoConfiguration), 

